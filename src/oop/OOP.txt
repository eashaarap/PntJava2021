OOP: Object Oriented Programming

Class
Object
Association
Aggregation
Composition

Abstractions
Encapsulation
Polymorphism
Inheritance


ABSTRACTION: implementation hiding
    interface: prototype;guideline for future for your reference so that dev team can follow to develop a complete
    product; use when role needs to defined in other classes, regardless of inheritance tree of these classes
        -can't instantiate variable and create object
        - cant contain concrete methods
        -only can use 'Public' modifier
    abstract class: template needs to be defined for a group of subclasses;

ENCAPSULATION: data hiding
    -mechanism of wrapping the data(variables) and code acting on the data (methods) together in a single unit
    - variables of class will be hidden from other classes, and can be accessed only through the methods of the current
    class
    TO ACHIEVE ENCAPSULATION IN JAVA:
        - declare variables of class as private
        - provide public setter and getter methods to modify and view the variables value

INHERITANCE:
    Grandfather = Super(parent) class
    Father is a sub(class)
